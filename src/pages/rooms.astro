---
export const prerender = true;
import { Icon } from 'astro-icon/components'
import Layout from '../layouts/Layout.astro';
import { AstroSEO } from 'astro-seo-plugin';
import ContactSection from '../components/ContactSection.astro';
import imageService from '../utils/ImageService.js';
import { fetchRooms, fetchSpecialDeal } from '../api.js';

// Helper for Cloudinary JPG (same as index)
const toCloudinaryJpg = (url: string) => {
  if (!url) return '/img/room-placeholder.jpg';
  // If already a full Cloudinary URL, return as-is with jpg
  if (url.includes('cloudinary.com')) {
    return url.replace(/f_avif|f_webp/, 'f_jpg');
  }
  // Otherwise process through Cloudinary
  return `https://res.cloudinary.com/dfa5hhzej/image/fetch/w_1200,h_675,c_fill,q_85,f_jpg/${url}`;
};

// Server-side data fetching with enhanced error handling
let data = { rooms: [], specialDeal: null };
let error = null;

try {
  const [rooms, specialDeal] = await Promise.all([
    fetchRooms(),
    fetchSpecialDeal()
  ]);
  
  // Process rooms with ImageService URLs
  const processedRooms = rooms
    .filter(room => room && room.roomName)
    .map((room, index) => {
      // Process hero image through ImageService
      const heroImageData = room.heroImage ? {
        ...room.heroImage,
        context: {
          pageType: 'rooms',
          contentName: room.roomName,
          imageType: 'card'
        }
      } : null;

      return {
        ...room,
        imageUrl: heroImageData ? imageService.processImage(heroImageData, 'roomCard', { quality: 70 }) : '/img/room-placeholder.avif',
        mosaicUrl: heroImageData ? imageService.processImage(heroImageData, 'headerTile', { quality: 50 }) : '/img/room-placeholder.avif',
        // Add schema-specific JPG URL
        schemaImageUrl: room.heroImage?.url ? toCloudinaryJpg(room.heroImage.url) : '/img/room-placeholder.jpg',
        safePrice: Number(room.basePrice) || 0,
        priority: index < 4,
        safeUrl: room.url?.startsWith('/') ? room.url : `/rooms/${room.url || room.id}`,
        maxOccupancy: "2 +"
      };
    });
  
  data = { rooms: processedRooms, specialDeal };
} catch (err) {
  console.error('Failed to load rooms data:', err);
  error = 'Failed to load content from CMS';
}

// Hero image from processed data
const roomsHeroImage = data.rooms[0]?.imageUrl || '/img/rooms-hero.avif';
const roomsHeroImageSchema = data.rooms[0]?.schemaImageUrl || toCloudinaryJpg('/img/rooms-hero.avif');

// Create randomized hero mosaic (after data processing)
function shuffleArray(array) {
  const shuffled = [...array];
  for (let i = shuffled.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];
  }
  return shuffled;
}

// Create randomized mosaic tiles (24 total)
const mosaicTiles = [];
const availableRooms = [...data.rooms];

// Fill 24 slots with random room selections
for (let i = 0; i < 24; i++) {
  if (availableRooms.length === 0) {
    availableRooms.push(...shuffleArray(data.rooms));
  }
  mosaicTiles.push(availableRooms.pop());
}

// Calculate price range for schema
const prices = data.rooms.map(r => r.safePrice).filter(p => p > 0);
const minPrice = prices.length > 0 ? Math.min(...prices) : 15000;
const maxPrice = prices.length > 0 ? Math.max(...prices) : 45000;
---

<Layout>
  <AstroSEO
    slot="head"
    title="Luxury Rooms & Suites | Limban Resort, Tadoba"
    description="Discover distinctive luxury accommodations at Limban Resort in Tadoba National Park. From deluxe rooms to exclusive villas, each offers eco-friendly comfort with wilderness views and modern amenities."
    
    openGraph={{
      title: "Luxury Safari Rooms & Suites - Limban Resort Tadoba",
      description: "Experience unique luxury accommodations at Limban Resort. Eco-friendly rooms and villas offering premium comfort in the heart of Tadoba National Park, Maharashtra.",
      image: roomsHeroImageSchema,
      type: "website",
      url: "https://limban.com/rooms",
      site_name: "Limban Resort"
    }}
    jsonLd={{
      "@context": "https://schema.org",
      "@type": "ItemList",
      "@id": "https://limban.com/rooms#roomlist",
      "name": "Limban Resort Accommodations",
      "description": "Luxury eco-resort rooms and suites at Limban Resort, Tadoba National Park",
      "url": "https://limban.com/rooms",
      "numberOfItems": 16,
      "itemListElement": data.rooms?.map((room, index) => ({
        "@type": "ListItem",
        "position": index + 1,
        "item": {
          "@type": "HotelRoom",
          "@id": `https://limban.com${room.safeUrl}#room`,
          "name": room.roomName,
          "description": room.shortDescription || `Luxury ${room.roomName} at Limban Resort`,
          "url": `https://limban.com${room.safeUrl}`,
          "image": room.schemaImageUrl,
          "occupancy": {
            "@type": "QuantitativeValue",
            "value": 2,
            "minValue": 1,
            "maxValue": 4
          },
          "offers": {
            "@type": "Offer",
            "price": room.safePrice.toString(),
            "priceCurrency": "INR",
            "availability": "https://schema.org/InStock"
          },
          "partOf": {
            "@type": "Hotel",
            "@id": "https://limban.com/#hotel"
          }
        }
      })) || [],
      "mainEntity": {
        "@type": "Hotel",
        "@id": "https://limban.com/#hotel",
        "name": "Limban Resort",
        "numberOfRooms": data.rooms?.length || 16,
        "priceRange": `₹${minPrice.toLocaleString('en-IN')}-₹${maxPrice.toLocaleString('en-IN')}`
      }
    }}
  />



  
  {data.rooms[0] && <link rel="preload" as="image" href={data.rooms[0].imageUrl} />}
  
  {error ? (
    <div class="bg-gray-950 text-gray-100 h-screen flex items-center justify-center" role="alert">
      <div class="text-center max-w-md mx-auto px-6">
        <div class="w-16 h-16 mx-auto mb-6">
          <svg class="w-full h-full text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 9v3.75m9-.75a9 9 0 11-18 0 9 9 0 0118 0zm-9 3.75h.008v.008H12v-.008z" />
          </svg>
        </div>
        <h1 class="text-2xl font-serif mb-4 text-red-400">Content Unavailable</h1>
        <p class="text-gray-400 mb-4">{error}</p>
        <button onclick="window.location.reload()" class="px-6 py-3 bg-amber-400 text-gray-900 font-semibold rounded-full hover:bg-amber-300 transition-colors">
          Try Again
        </button>
      </div>
    </div>
  ) : (
    <a href="#main-content" title="Skip to main content" class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 bg-amber-400 text-gray-900 px-4 py-2 rounded z-50">
      Skip to main content
    </a>

    <div class="bg-gray-950 text-gray-100">
      <!-- Hero Section with Dynamic Mosaic -->
      <section class="relative pt-48 pb-32 overflow-hidden bg-gray-950">
        <div class="absolute inset-0 grid grid-cols-4 md:grid-cols-6 gap-0 opacity-60">
          {mosaicTiles.map((room, index) => (
            <div 
              key={`mosaic-${index}`}
              class="relative overflow-hidden h-full fade-in-up"
              style={`animation-delay: ${index * 50}ms`}
            >
              <img
                src={room.mosaicUrl}
                alt={`${room.roomName} at Limban Resort`}
                loading={index < 12 ? 'eager' : 'lazy'}
                class="relative w-full h-full object-cover hover:scale-105 transition-all duration-1000"
              />
              
              <!-- Room name overlay -->
              <div class="absolute inset-0 bg-gray-900/80 opacity-0 hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
                <span class="text-white text-xs font-medium text-center px-2">
                  {room.roomName}
                </span>
              </div>
            </div>
          ))}
        </div>
        
        <!-- Enhanced gradients -->
        <div class="absolute inset-0 bg-gradient-to-br from-black/80 via-black/50 to-black/70"></div>
        <div class="absolute inset-0 bg-gradient-to-t from-black/90 via-transparent to-black/40"></div>
        <div class="absolute inset-0 bg-gradient-to-r from-transparent via-amber-400/5 to-transparent animate-pulse"></div>
        
        <!-- Hero content -->
        <main id="main-content" class="relative z-10 max-w-7xl mx-auto px-6 text-center" role="main">
          <div class="text-sm text-gray-300 tracking-[0.2em] uppercase mb-6">
            Luxury Safari Accommodations
          </div>
          <h1 class="font-serif text-5xl md:text-7xl lg:text-8xl text-amber-400 mb-8 drop-shadow-2xl">
            Our Rooms & Suites
          </h1>
          <p class="text-xl md:text-2xl text-gray-200 max-w-4xl mx-auto leading-relaxed drop-shadow-lg">
            Experience the perfect blend of luxury and wilderness in our thoughtfully designed rooms,
            each offering stunning views and modern amenities in the heart of Tadoba National Park.
          </p>
        </main>
      </section>

      <!-- Breadcrumb Navigation -->
      <nav class="py-6 bg-gray-900/50 border-b border-gray-800" aria-label="Breadcrumb">
        <div class="max-w-7xl mx-auto px-6">
          <ol class="flex items-center justify-center space-x-2 text-sm">
            <li>
              <a href="/" title="Return to Limban Resort homepage" class="text-gray-400 hover:text-amber-400 transition-colors duration-300 flex items-center">
                <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"/>
                </svg>
                Home
              </a>
            </li>
            <li><svg class="w-4 h-4 text-gray-600" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/></svg></li>
            <li><span class="text-amber-400 font-medium">Rooms & Suites</span></li>
          </ol>
        </div>
      </nav>

      <!-- Rooms Grid Section -->
      <section class="py-32 bg-gradient-to-b from-gray-950 to-gray-1">
        <div class="max-w-7xl mx-auto px-6">
          

          <header class="text-center mb-20">
            <div class="inline-block px-6 py-2 bg-amber-400/10 border border-amber-400/30 rounded-full mb-8">
              <span class="text-amber-400 text-sm font-medium tracking-widest uppercase">
                Luxury Accommodations
              </span>
            </div>
            <h2 class="font-serif text-4xl md:text-6xl text-white mb-6">
              Six Distinctive Experiences
            </h2>
            <p class="text-xl text-gray-300 max-w-3xl mx-auto">
              Each of our 16 rooms tells its own story of luxury, comfort, and connection with nature
            </p>
          </header>

          <div class="grid grid-cols-1 lg:grid-cols-2 gap-12" role="list">
            {data.rooms?.length > 0 ? (
              data.rooms.map((room, index) => (
                <article 
                  key={room.id}
                  class="group bg-gray-800/40 border border-gray-500/50 rounded-3xl overflow-hidden hover:border-amber-400/50 transition-all duration-700 hover:-translate-y-2 hover:shadow-2xl hover:shadow-amber-400/10 flex flex-col"
                >
                  <!-- Image with room indicators -->
                  <div class="relative overflow-hidden">
                    <img
                        src={room.imageUrl}
                        alt={`${room.roomName} - Luxury accommodation at Limban Resort in Tadoba`}
                        loading={room.priority ? 'eager' : 'lazy'}
                        class="h-80 w-full object-cover group-hover:scale-105 transition-transform duration-700"
                      />                                       
                    <!-- Occupancy indicator -->
                    <div class="absolute top-4 right-4 flex items-center space-x-1 px-3 py-1 bg-gray-900/80 backdrop-blur-sm rounded-full">
                      <svg class="w-4 h-4 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"/>
                      </svg>
                      <span class="text-xs text-gray-300">{room.maxOccupancy}</span>
                    </div>
                    
                    <div class="absolute inset-0 bg-gradient-to-t from-black/40 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                  </div>

                  <!-- Enhanced content section -->
                  <div class="p-10 flex flex-col flex-grow space-y-8">
                    <!-- Room header -->
                    <header class="text-center">
                      <h3 class="font-serif text-3xl md:text-4xl text-amber-400 font-bold mb-4 group-hover:text-amber-300 transition-colors duration-300">
                        {room.roomName}
                      </h3>
                      <p class="text-lg text-gray-300 leading-relaxed">
                        {room.shortDescription}
                      </p>
                    </header>

                    <!-- Interactive amenities with Astro Icon -->
                    {room.roomFeature && room.roomFeature.length > 0 && (
                      <div class="flex-grow">
                        <h4 class="text-sm font-semibold text-amber-400 mb-6 tracking-wider uppercase text-center">
                          Luxury Amenities
                        </h4>
                        <div class="grid grid-cols-4 gap-3">
                          {room.roomFeature.slice(0, 12).map((feature) => (
                            <div key={feature.id} class="group/tooltip relative">
                              <div class="h-20 flex flex-col sm:justify-between justify-center items-center p-3 bg-gray-700/30 rounded-xl hover:bg-amber-400/10 transition-colors duration-300 min-h-[32px]">
                                <div class="w-7 h-7 text-gray-400 group-hover:text-amber-400 transition-colors duration-300 flex items-center justify-center">
                                  <Icon 
                                    name={feature.svgImage} 
                                    class="w-full h-full"
                                  />
                                </div>
                                <span class="hidden sm:block text-xs text-gray-400 mt-1 text-center leading-tight group-hover:text-amber-100 transition-colors duration-300">
                                  {feature.featureName}
                                </span>
                              </div>
                              
                              {/* Ultra Elegant Tooltip - Only visible on small screens */}
                              <div class="sm:hidden absolute bottom-full left-1/2 -translate-x-1/2 mb-2 px-3 py-2 bg-gradient-to-r from-gray-900 to-gray-800 text-white text-xs rounded-lg shadow-2xl border border-gray-700/50 backdrop-blur-sm opacity-0 scale-95 translate-y-2 pointer-events-none group-hover/tooltip:opacity-100 group-hover/tooltip:scale-100 group-hover/tooltip:translate-y-0 transition-all duration-300 ease-out z-50 whitespace-nowrap">
                                <span class="font-medium text-amber-100">{feature.featureName}</span>
                                
                                {/* Elegant Arrow */}
                                <div class="absolute top-full left-1/2 -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-800"></div>
                                
                                {/* Subtle Glow Effect */}
                                <div class="absolute inset-0 bg-gradient-to-r from-amber-400/5 to-amber-300/5 rounded-lg"></div>
                              </div>
                            </div>
                          ))}
                        </div>

                      </div>
                    )}

                    <!-- Pricing with value indicators -->
                    <footer class="pt-8 border-t border-gray-700/50 space-y-6">
                      <div class="text-center space-y-3">
                        <div class="flex items-center justify-center space-x-2">
                          <span class="text-sm text-gray-400">From</span>
                          <span class="text-3xl font-bold text-white">₹{room.safePrice.toLocaleString()}</span>
                          <span class="text-sm text-gray-400">/ night</span>
                        </div>
                        
                        <!-- Value indicators -->
                        <div class="flex items-center justify-center space-x-4 text-xs text-gray-400">
                          <span class="flex items-center">
                            <Icon name="mdi:check-circle" class="w-4 h-4 mr-1 text-green-400" />
                            Breakfast Included
                          </span>
                          <span class="flex items-center">
                            <Icon name="mdi:check-circle" class="w-4 h-4 mr-1 text-blue-400" />
                            Free Cancellation
                          </span>
                        </div>
                      </div>
                      
                      <a 
                        href={room.safeUrl}
                        title={`Explore ${room.roomName} details and booking`}
                        class="action-btn group/cta relative overflow-hidden"
                        aria-label={`Explore ${room.roomName} details and booking`}
                      >
                        <span class="relative z-10 flex items-center justify-center">
                          Explore {room.roomName}
                          <svg class="w-5 h-5 ml-2 group-hover/cta:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
                          </svg>
                        </span>
                        
                        <!-- Animated background effect -->
                        <div class="absolute inset-0 bg-gradient-to-r from-white/0 via-white/20 to-white/0 transform translate-x-[-100%] group-hover/cta:translate-x-[100%] transition-transform duration-1000 ease-out"></div>
                      </a>
                    </footer>
                  </div>
                </article>
              ))
            ) : (
              <div class="col-span-full text-center py-16">
                <div class="w-16 h-16 mx-auto mb-6 text-gray-500">
                  <svg class="w-full h-full" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19 14l-7-7-7 7m14 0v3a2 2 0 01-2 2H5a2 2 0 01-2-2v-3" />
                  </svg>
                </div>
                <h3 class="text-xl text-gray-400 mb-2">Rooms Coming Soon</h3>
                <p class="text-gray-500">We're updating our accommodations. Please check back soon.</p>
              </div>
            )}
          </div>
        </div>
      </section>

      <!-- Contact Section -->
      <ContactSection />
    </div>
  )}
</Layout>

<style>
  .fade-in-up {
    opacity: 0;
    animation: fadeInUp 0.8s ease-out forwards;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px) scale(0.95);
    }
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }


  /* Performance optimizations */
  .group {
    will-change: transform;
  }

  .transition-transform {
    will-change: transform;
  }

  /* Respect user motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .transition-all,
    .transition-transform,
    .transition-colors,
    .hover\:scale-105,
    .animate-pulse,
    .fade-in-up {
      transition: none !important;
      transform: none !important;
      animation: none !important;
    }
  }
</style>
