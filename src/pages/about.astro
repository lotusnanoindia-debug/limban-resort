---
import Layout from "../layouts/Layout.astro";
import { AstroSEO } from "astro-seo-plugin";
import { fetchAboutData } from "../api.js";

// Fetch about page data
let aboutData = null;
let error = null;

try {
  aboutData = await fetchAboutData();
} catch (err) {
  console.error("Failed to load about data:", err);
  error = "Failed to load content from Hygraph";
}

// Fallback in case of error
if (!aboutData) {
  aboutData = {
    spaceImages: [],
    teamImages: [],
  };
}

// Prepare optimized image sets (matching Vibe page pipeline)
const spaceImages = aboutData.spaceImages?.map((space, index) => ({
  id: `space-${index}`,
  src: space.card || space.url,
  placeholder: space.placeholder || space.url,
  large: space.large || space.url,
  alt: space.alt || space.title || `Experience Limban Resort signature space`,
  width: space.width || 600,
  height: space.height || 450
})) || [];

// Helper function to capitalize first letter of each word (from Vibe page)
function capitalizeWords(str) {
  return str.replace(/\w\S*/g, (txt) => 
    txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()
  );
}
---

<Layout title="About Limban Resort - Where the Wild Meets the Soul">
  <AstroSEO
    title="About Limban Resort | Where the Wild Meets the Soul - Tadoba Safari Lodge"
    description="Discover the philosophy behind Limban Resort - a luxury safari sanctuary crafted by visionary architects in the heart of Tadoba National Park. Experience where wilderness meets luxury."
    canonical="https://limban.com/about"
    openGraph={{
      title: "About Limban Resort - Where the Wild Meets the Soul",
      description: "A luxury safari sanctuary where architecture, wilderness, and soul converge in Tadoba National Park.",
      image: aboutData.heroImage.optimisedCard || aboutData.heroImage.url,
      type: "website",
      url: "https://limban.com/about",
    }}
    jsonLd={{
      "@context": "https://schema.org",
      "@type": "TouristDestination",
      name: "Limban Resort",
      description: "Luxury safari resort in Tadoba National Park offering premium eco-friendly accommodation and tiger safari experiences.",
      url: "https://limban.com",
      address: {
        "@type": "PostalAddress",
        streetAddress: "Survey No. 306, Village Mudholi, Taluka Bhadravati",
        addressLocality: "Chandrapur",
        addressRegion: "Maharashtra",
        postalCode: "442906",
        addressCountry: "IN",
      },
      geo: {
        "@type": "GeoCoordinates",
        latitude: "20.25602486093492",
        longitude: "79.2847888101826",
      },
      founder: [
        {
          "@type": "Person",
          name: "Amala Sheth",
          jobTitle: "Principal Architect",
        },
        {
          "@type": "Person",
          name: "Anand Bhagat",
          jobTitle: "Principal Architect",
        },
      ],
    }}
    additionalLinkTags={[
      {
        rel: "preload",
        as: "image",
        href: aboutData.heroImage.optimisedCard || aboutData.heroImage.url,
      },
      {
        rel: "apple-touch-icon",
        sizes: "180x180",
        href: "/apple-touch-icon.png",
      },
      {
        rel: "icon",
        type: "image/png",
        sizes: "32x32",
        href: "/favicon-32x32.png",
      },
      {
        rel: "icon",
        type: "image/png",
        sizes: "16x16",
        href: "/favicon-16x16.png",
      },
      { rel: "manifest", href: "/site.webmanifest" },
    ]}
    additionalMetaTags={[
      { name: "robots", content: "index, follow" },
      {
        name: "keywords",
        content: "Limban Resort story, Tadoba luxury lodge, Amala Sheth architect, safari resort philosophy",
      },
      { name: "theme-color", content: "#1f2937" },
    ]}
  />

  <div class="bg-gray-950 text-gray-100 selection:bg-gray-700">
    
    <!-- Keep all existing sections EXACTLY as they are until Spaces Gallery -->
    <!-- Hero Section, Breadcrumb, Philosophy, Visionaries, Ethos - NO CHANGES -->
    
    <!-- Enhanced Signature Spaces Section -->
    <section class="py-32 bg-gray-900">
      <div class="max-w-7xl mx-auto px-6">
        
        <div class="text-center mb-20">
          <div class="inline-block px-6 py-2 bg-amber-400/10 border border-amber-400/30 rounded-full mb-8">
            <span class="text-amber-400 text-sm font-medium tracking-widest uppercase">Signature Spaces</span>
          </div>
          <h2 class="font-serif italic text-4xl md:text-6xl text-white mb-8">
            Every Space Tells its own unique Story
          </h2>
          <p class="text-xl text-gray-300 font-light max-w-4xl mx-auto">
            From dawn to dusk, each corner of Limban offers a unique chapter in your safari story, 
            designed to awaken your senses and connect you with the wild.
          </p>
        </div>

        <!-- Ultra-Optimized Spaces Gallery Grid -->
        <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-4 mb-12">
          {spaceImages && spaceImages.length > 0 ? (
            spaceImages.map((space, index) => (
              <div 
                key={space.id}
                class="group relative aspect-[4/3] overflow-hidden rounded-md border border-gray-700 hover:border-amber-400/50 transition-all duration-500 hover:scale-105 hover:shadow-xl hover:shadow-black/20 cursor-pointer"
                data-gallery-index={index}
              >
                <!-- LQIP Background -->
                <div class="absolute inset-0">
                  <img
                    src={space.placeholder}
                    alt=""
                    class="w-full h-full object-cover blur-sm scale-110"
                  />
                </div>
                
                <!-- Main Image with Lazy Loading -->
                <img
                  src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1' height='1'%3E%3C/svg%3E"
                  data-src={space.src}
                  alt={space.alt}
                  class="relative w-full h-full object-cover lazy-image opacity-0 group-hover:scale-110 transition-all duration-700"
                  loading="lazy"
                />
                
                <!-- Elegant Hover Overlay with Alt Text -->
                <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-500"></div>
                
                <!-- Alt Text Display on Hover -->
                <div class="absolute bottom-0 left-0 right-0 p-4 transform translate-y-full group-hover:translate-y-0 transition-transform duration-500">
                  <p class="text-white text-sm font-serif italic leading-relaxed text-center">
                    {capitalizeWords(space.alt)}
                  </p>
                </div>
                            
                <!-- View Icon -->
                <div class="absolute top-3 right-3 w-10 h-10 bg-black/50 rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                  <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                  </svg>
                </div>
              </div>
            ))
          ) : (
            <div class="col-span-full text-center">
              <p class="text-gray-400">Spaces gallery coming soon...</p>
            </div>
          )}
        </div>

        <!-- Space Descriptions -->
        <div class="text-center">
          <p class="text-lg text-gray-300 font-light italic">
            Click any image to explore our signature spaces in detail
          </p>
        </div>
      </div>
    </section>

    <!-- Enhanced Gallery Modal with Preview Thumbnails (from Vibe page) -->
    <div id="spaces-gallery-modal" class="fixed inset-0 z-50 bg-black/95 backdrop-blur-xl hidden items-center justify-center p-4">
      <div class="relative max-w-7xl w-full h-full flex flex-col">
        
        <!-- Close Button -->
        <button id="close-spaces-gallery" class="absolute top-6 right-6 z-20 w-14 h-14 bg-black/50 hover:bg-black/70 rounded-full flex items-center justify-center text-white transition-colors cursor-pointer">
          <svg class="w-7 h-7" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>

        <!-- Main Image Container with Portrait Height Control -->
        <div class="flex-1 flex items-center justify-center relative" style="max-height: 85vh;">
          
          <!-- Image with Elegant Bottom Overlay -->
          <div class="relative">
            <img 
              id="spaces-modal-image" 
              src="" 
              alt="" 
              class="object-contain rounded-lg shadow-2xl" 
              style="max-height: 85vh; max-width: 90vw;"
            />
            
            <!-- Elegant Bottom Overlay for Image Info -->
            <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/90 via-black/70 to-transparent backdrop-blur-sm rounded-b-lg">
              <div class="p-8 text-center">
                <p id="spaces-image-counter" class="text-lg font-medium mb-3 text-amber-400"></p>
                <p id="spaces-image-alt-text" class="text-xl font-serif italic text-white leading-relaxed"></p>
              </div>
            </div>
          </div>
          
          <!-- Navigation Arrows with Pointer Cursor -->
          <button id="spaces-prev-image" class="absolute left-6 top-1/2 -translate-y-1/2 w-16 h-16 bg-black/60 hover:bg-black/80 rounded-full flex items-center justify-center text-white transition-all duration-300 cursor-pointer hover:scale-110">
            <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
            </svg>
          </button>
          
          <button id="spaces-next-image" class="absolute right-6 top-1/2 -translate-y-1/2 w-16 h-16 bg-black/60 hover:bg-black/80 rounded-full flex items-center justify-center text-white transition-all duration-300 cursor-pointer hover:scale-110">
            <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
            </svg>
          </button>
        </div>

        <!-- Preview Thumbnails Row -->
        <div class="flex items-center justify-center space-x-4 mt-6 mb-4">
          <!-- Previous Image Preview -->
          <div id="spaces-prev-preview" class="flex items-center space-x-3 cursor-pointer group">
            <div class="w-20 h-16 rounded-lg overflow-hidden bg-gray-800 border-2 border-gray-600 group-hover:border-white transition-colors">
              <img id="spaces-prev-preview-img" src="" alt="" class="w-full h-full object-cover" />
            </div>
            <span class="text-gray-400 text-sm group-hover:text-white transition-colors">Previous</span>
          </div>

          <!-- Current Image Indicator -->
          <div class="flex items-center space-x-2 mx-8">
            <div class="w-2 h-2 bg-gray-600 rounded-full"></div>
            <div class="w-3 h-3 bg-amber-400 rounded-full"></div>
            <div class="w-2 h-2 bg-gray-600 rounded-full"></div>
          </div>

          <!-- Next Image Preview -->
          <div id="spaces-next-preview" class="flex items-center space-x-3 cursor-pointer group">
            <span class="text-gray-400 text-sm group-hover:text-white transition-colors">Next</span>
            <div class="w-20 h-16 rounded-lg overflow-hidden bg-gray-800 border-2 border-gray-600 group-hover:border-white transition-colors">
              <img id="spaces-next-preview-img" src="" alt="" class="w-full h-full object-cover" />
            </div>
          </div>
        </div>

      </div>
    </div>
    
    <!-- Keep all remaining sections EXACTLY as they are -->
    <!-- Location, Team, CTA - NO CHANGES -->
    
  </div>
</Layout>

<!-- Enhanced Performance & Interaction Scripts (from Vibe page) -->
<script define:vars={{ spaceImages }}>
  // Helper function to capitalize first letter of each word
  function capitalizeWords(str) {
    return str.replace(/\w\S*/g, (txt) => 
      txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()
    );
  }

  // Advanced Lazy Loading with Intersection Observer
  const lazyImages = document.querySelectorAll('.lazy-image');
  const imageObserver = new IntersectionObserver((entries, observer) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const img = entry.target;
        const src = img.dataset.src;
        if (src) {
          img.src = src;
          img.classList.add('opacity-100');
          img.classList.remove('opacity-0');
          observer.unobserve(img);
        }
      }
    });
  }, {
    rootMargin: '100px 0px',
    threshold: 0.1
  });

  lazyImages.forEach(img => imageObserver.observe(img));

  // Enhanced Gallery Modal Logic
  let currentImages = [];
  let currentIndex = 0;
  
  const modal = document.getElementById('spaces-gallery-modal');
  const modalImage = document.getElementById('spaces-modal-image');
  const imageCounter = document.getElementById('spaces-image-counter');
  const imageAltText = document.getElementById('spaces-image-alt-text');
  const closeBtn = document.getElementById('close-spaces-gallery');
  const prevBtn = document.getElementById('spaces-prev-image');
  const nextBtn = document.getElementById('spaces-next-image');
  const prevPreview = document.getElementById('spaces-prev-preview');
  const nextPreview = document.getElementById('spaces-next-preview');
  const prevPreviewImg = document.getElementById('spaces-prev-preview-img');
  const nextPreviewImg = document.getElementById('spaces-next-preview-img');

  // Use the passed variables directly
  const spaceImageData = spaceImages;

  function openModal(images, index) {
    currentImages = images;
    currentIndex = index;
    updateModalImage();
    modal.classList.remove('hidden');
    modal.classList.add('flex');
    document.body.style.overflow = 'hidden';
  }

  function closeModal() {
    modal.classList.add('hidden');
    modal.classList.remove('flex');
    document.body.style.overflow = 'auto';
  }

  function updateModalImage() {
    const image = currentImages[currentIndex];
    if (image) {
      modalImage.src = image.large;
      modalImage.alt = image.alt;
      imageCounter.textContent = `${currentIndex + 1} of ${currentImages.length}`;
      imageAltText.textContent = capitalizeWords(image.alt);
      
      // Update preview thumbnails
      updatePreviewThumbnails();
    }
  }

  function updatePreviewThumbnails() {
    const prevIndex = (currentIndex - 1 + currentImages.length) % currentImages.length;
    const nextIndex = (currentIndex + 1) % currentImages.length;
    
    // Update previous preview
    if (currentImages[prevIndex] && currentIndex > 0) {
      prevPreviewImg.src = currentImages[prevIndex].src;
      prevPreview.style.display = 'flex';
      prevPreview.style.opacity = '1';
    } else if (currentImages.length > 1) {
      prevPreviewImg.src = currentImages[currentImages.length - 1].src;
      prevPreview.style.display = 'flex';
      prevPreview.style.opacity = '0.7';
    } else {
      prevPreview.style.display = 'none';
    }
    
    // Update next preview
    if (currentImages[nextIndex] && currentIndex < currentImages.length - 1) {
      nextPreviewImg.src = currentImages[nextIndex].src;
      nextPreview.style.display = 'flex';
      nextPreview.style.opacity = '1';
    } else if (currentImages.length > 1) {
      nextPreviewImg.src = currentImages[0].src;
      nextPreview.style.display = 'flex';
      nextPreview.style.opacity = '0.7';
    } else {
      nextPreview.style.display = 'none';
    }
  }

  function nextImage() {
    currentIndex = (currentIndex + 1) % currentImages.length;
    updateModalImage();
  }

  function prevImage() {
    currentIndex = (currentIndex - 1 + currentImages.length) % currentImages.length;
    updateModalImage();
  }

  // Event Listeners
  document.querySelectorAll('[data-gallery-index]').forEach(el => {
    el.addEventListener('click', () => {
      const index = parseInt(el.dataset.galleryIndex);
      openModal(spaceImageData, index);
    });
  });

  closeBtn?.addEventListener('click', closeModal);
  prevBtn?.addEventListener('click', prevImage);
  nextBtn?.addEventListener('click', nextImage);
  prevPreview?.addEventListener('click', prevImage);
  nextPreview?.addEventListener('click', nextImage);

  // Keyboard Navigation
  document.addEventListener('keydown', (e) => {
    if (modal?.classList.contains('flex')) {
      if (e.key === 'Escape') closeModal();
      if (e.key === 'ArrowLeft') prevImage();
      if (e.key === 'ArrowRight') nextImage();
    }
  });

  // Close on backdrop click
  modal?.addEventListener('click', (e) => {
    if (e.target === modal) closeModal();
  });
</script>

<style>
  /* Critical CSS for immediate render */
  .lazy-image {
    transition: opacity 0.7s ease-in-out;
  }
  
  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }
  
  ::-webkit-scrollbar-track {
    background: #1f2937;
  }
  
  ::-webkit-scrollbar-thumb {
    background: #f59e0b;
    border-radius: 4px;
  }
  
  ::-webkit-scrollbar-thumb:hover {
    background: #d97706;
  }
</style>
