---
import Layout from '../layouts/Layout.astro';
import ContactSection from '../components/ContactSection.astro';
import ExperiencesSection from '../components/ExperiencesSection.astro';
import TestimonialsSection from '../components/TestimonialsSection.astro';
import AwardsSection from '../components/AwardsSection.astro';
import { fetchAllHomepageData } from '../api.js';

// Server-side data fetching
let data = {
  heroes: [],
  subHero: null,
  rooms: [],
  experiences: null,
  specialDeal: null
};

let error = null;

try {
  data = await fetchAllHomepageData();
} catch (err) {
  console.error('Failed to load homepage data:', err);
  error = 'Failed to load content from Hygraph';
}

// Calculate grid layout for experiences
const experienceCount = data.experiences?.experience?.length || 0;
const gridClass = {
  1: 'grid-cols-1',
  2: 'grid-cols-1 md:grid-cols-2', 
  3: 'grid-cols-1 md:grid-cols-3',
  4: 'grid-cols-1 md:grid-cols-2'
}[experienceCount] || 'grid-cols-1 md:grid-cols-2';
---

<Layout title="Limban Resort - Luxury Safari Experience in Tadoba">
  {error ? (
    <div class="bg-gray-950 text-gray-100 h-screen flex items-center justify-center">
      <div class="text-center">
        <div class="text-2xl font-serif italic mb-4 text-red-400">Error</div>
        <div class="text-gray-400">{error}</div>
      </div>
    </div>
  ) : (
    <>
      <!-- Hero Section -->
      <section class="h-screen relative overflow-hidden">
        <div id="hero-carousel" class="h-full relative">
          {data.heroes.map((hero, index) => (
            <div 
              class={`hero-slide absolute inset-0 w-full h-full transition-opacity duration-1200 ${index === 0 ? 'opacity-100' : 'opacity-0'}`}
              data-slide={index}
            >
              <picture class="absolute inset-0 w-full h-full">
                <source media="(min-width: 2560px)" srcset={hero.backgroundImage?.hero4K || hero.backgroundImage?.url} />
                <source media="(min-width: 1200px)" srcset={hero.backgroundImage?.heroDesktop || hero.backgroundImage?.url} />
                <source media="(min-width: 768px)" srcset={hero.backgroundImage?.heroTablet || hero.backgroundImage?.url} />
                <img
                  src={hero.backgroundImage?.heroMobile || hero.backgroundImage?.url}
                  alt={hero.slideTitle}
                  class="w-full h-full object-cover"
                  loading="lazy"
                />
              </picture>
              <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-black/20"></div>
              <div class="absolute inset-0 bg-gradient-to-b from-transparent via-transparent to-black/60"></div>
              <div class="relative h-full flex items-center justify-center text-center z-10">
                <div class="max-w-5xl mx-auto px-6">
                  <h1 class="font-serif italic text-5xl md:text-7xl lg:text-8xl text-white mb-6 leading-tight drop-shadow-lg">
                    {hero.slideTitle}
                  </h1>
                  {hero.subtitle && (
                    <h2 class="text-xl text-white font-semibold mb-12 leading-tight drop-shadow-lg">
                      {hero.subtitle}
                    </h2>
                  )}
                  {hero.ctaText && (
                    <a
                      href={hero.ctaLink || '#'}
                      class="inline-block rounded-lg border border-amber-600/50 bg-gradient-to-br from-amber-400 to-amber-600 px-8 py-4 text-lg font-semibold tracking-wide text-gray-950 shadow-lg transition-all duration-300 ease-in-out transform hover:-translate-y-1 hover:from-amber-300 hover:to-amber-500 hover:shadow-xl"
                    >
                      {hero.ctaText}
                    </a>
                  )}
                </div>
              </div>
            </div>
          ))}
        </div>
      </section>

      <!-- Sub Hero Section -->
      {data.subHero && (
        <section class="py-32 bg-gray-900">
          <div class="max-w-7xl mx-auto px-6">
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-20 items-center">
              <div>
                <div class="text-sm text-gray-400 tracking-[0.2em] uppercase mb-4">
                  {data.subHero.aboveHeader}
                </div>
                <h2 class="font-serif italic text-4xl md:text-6xl text-white mb-8 leading-tight">
                  {data.subHero.title}
                </h2>
                <div class="text-base text-gray-300 mb-8 leading-relaxed prose prose-invert max-w-none" set:html={data.subHero.bodyText?.html}>
                </div>
                {data.subHero.stats && (
                  <div class="grid grid-cols-3 gap-8">
                    {data.subHero.stats.map((stat, index) => (
                      <div key={index} class="text-center">
                        <div class="w-8 h-8 mx-auto mb-3 text-gray-400" set:html={stat.svg}>
                        </div>
                        <div class="text-3xl font-bold text-white">{stat.number}</div>
                        <div class="text-sm text-gray-400 tracking-wide">{stat.label}</div>
                      </div>
                    ))}
                  </div>
                )}
              </div>
              <div>
                <img
                  src={data.subHero.image?.url}
                  alt={data.subHero.imageAltText}
                  class="w-full h-[600px] object-cover rounded-lg shadow-2xl"
                  width="800"
                  height="600"
                  loading="lazy"
                  decoding="async"
                />
              </div>
            </div>
          </div>
        </section>
      )}

      <!-- Rooms Section -->
      <section id="accommodations" class="py-32 bg-gray-800">
        <div class="max-w-7xl mx-auto px-6">
          <div class="text-center mb-20">
            <div class="text-sm text-gray-400 tracking-[0.2em] uppercase mb-4">
              Exceptional Accommodations!
            </div>
            <h2 class="font-serif italic text-4xl md:text-6xl text-white mb-8">
              Six Luxury Experiences
            </h2>
            <p class="text-xl text-gray-300 max-w-3xl mx-auto leading-relaxed">
              Six distinctive accommodation experiences, each designed to provide the perfect
              balance of luxury, comfort, and authentic connection with the wilderness.
            </p>
          </div>
          
          {data.specialDeal && data.specialDeal.html && (
            <div class="max-w-4xl mx-auto mb-16 bg-gray-900/50 border border-yellow-600/30 rounded-xl p-6 text-center shadow-lg">
              <div class="font-semibold text-orange-300 max-w-none" set:html={data.specialDeal.html} />
            </div>
          )}
          
          <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
            {data.rooms?.length > 0 ? (
              data.rooms.map((room) => (
                <div key={room.id} class="bg-gray-800/50 backdrop-blur-xl border border-gray-500 rounded-xl overflow-hidden shadow-lg shadow-white/5 hover:shadow-2xl transition-all duration-500 group flex flex-col">
                  <picture class="w-full h-64 overflow-hidden">
                    <img
                      src={room.heroImage?.optimisedCard}
                      alt={`${room.roomName} - Luxury accommodation at Limban Resort in Tadoba, India`}
                      width="450"
                      height="300"
                      class="w-full h-64 object-cover group-hover:scale-110 transition-transform duration-500"
                      loading="lazy"
                      decoding="async"
                    />
                  </picture>
                  <div class="p-10 flex flex-col flex-grow">
                    <div class="flex items-center mb-3">
                      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"
                        stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                        class="w-5 h-5 mr-2 text-gray-400">
                        <rect width="18" height="11" x="3" y="11" rx="2" ry="2" />
                        <circle cx="12" cy="5" r="2" />
                        <path d="m12 7-8 4v6l8-4 8 4v-6l-8-4Z" />
                      </svg>
                      <h3 class="text-xl text-white font-bold">{room.roomName}</h3>
                    </div>
                    <p class="text-gray-400 mb-6 text-sm leading-relaxed flex-grow">
                      {room.shortDescription}
                    </p>
                    <div class="space-y-4">
                      <div>
                        <span class="text-2xl font-bold text-white">From â‚¹{Number(room.basePrice).toLocaleString()}</span>
                        <span class="text-sm text-gray-400 block">per night</span>
                      </div>
                      <a href={`/rooms/${room.url}`} class="group relative block w-full text-center bg-gradient-to-r from-gray-100 to-gray-200 hover:from-orange-400 hover:to-orange-500 text-gray-900 hover:text-white px-6 py-3 rounded-lg text-sm tracking-wide transition-all duration-300 hover:shadow-lg border border-gray-300 hover:border-orange-400">
                        <span class="relative z-10">Learn More</span>
                      </a>
                    </div>
                  </div>
                </div>
              ))
            ) : (
              <div class="col-span-full text-center py-12">
                <p class="text-gray-400 text-lg">Rooms are being updated. Please check back soon.</p>
              </div>
            )}
          </div>
        </div>
      </section>

      <!-- Component Sections -->
      <ExperiencesSection experiences={data.experiences} gridClass={gridClass} />
      <TestimonialsSection />
      <AwardsSection />
      <ContactSection />
    </>
  )}

  <script>
    // Simple hero carousel functionality
    let currentSlide = 0;
    const slides = document.querySelectorAll('.hero-slide');
    const totalSlides = slides.length;

    function showNextSlide() {
      slides[currentSlide].classList.remove('opacity-100');
      slides[currentSlide].classList.add('opacity-0');
      
      currentSlide = (currentSlide + 1) % totalSlides;
      
      slides[currentSlide].classList.remove('opacity-0');
      slides[currentSlide].classList.add('opacity-100');
    }

    // Auto-advance slides every 8 seconds
    if (totalSlides > 1) {
      setInterval(showNextSlide, 8000);
    }
  </script>
</Layout>
