---
import { Icon } from 'astro-icon/components'
import Layout from "../../layouts/Layout.astro";
import { AstroSEO } from "astro-seo-plugin";
import UniversalGallery from "../../components/UniversalGallery.astro";
import GalleryModal from "../../components/GalleryModal.astro";
import DiningReservationForm from "../../components/DiningReservationForm.astro";
import SmartReserveButton from "../../components/SmartReserveButton.astro";
import imageService from "../../utils/ImageService.js";
import {
  fetchDiningBySlug,
  fetchDining,
} from "../../api.js";

// Helper for Cloudinary JPG (schema only)
const toCloudinaryJpg = (url: string) => {
  if (!url) return '';
  return `https://res.cloudinary.com/dfa5hhzej/image/fetch/w_1200,h_675,c_fill,q_85,f_jpg/${url}`;
};

// Server-side data fetching with error handling
let data = { experiences: [] };
let error = null;

try {
  const experiences = await fetchDining();
  data = { experiences };
} catch (err) {
  console.error("Failed to load dining experiences data:", err);
  error = "Failed to load content from CMS";
}

export async function getStaticPaths() {
  try {
    const experiences = await fetchDining();
    return experiences.map((experience) => ({
      params: { slug: experience.url },
      props: { experienceData: experience },
    }));
  } catch (err) {
    console.error("Failed to generate static paths:", err);
    return [];
  }
}

const { slug } = Astro.params;
const experience = await fetchDiningBySlug(slug);

if (!experience) {
  return Astro.redirect("/dining");
}

// Process hero image through ImageService (for display - AVIF)
const heroImageData = experience.images?.[0] ? {
  ...experience.images[0],
  context: {
    pageType: 'dining',
    contentName: experience.restaurantName,
    imageType: 'hero'
  }
} : null;

// Generate display URL (AVIF for users)
const heroImageUrl = heroImageData 
  ? imageService.processImage(heroImageData, 'heroDesktop', { quality: 75 })
  : 'https://limban.com/img/dining-placeholder.avif';

// Generate schema URL (JPG for Google)
const schemaHeroImage = experience.images?.[0]?.url 
  ? toCloudinaryJpg(experience.images[0].url)
  : '';

// Build schema images array
const schemaImages = [schemaHeroImage].filter(Boolean);

// Restaurant schema
const restaurantSchema = {
  "@context": "https://schema.org",
  "@type": "Restaurant",
  "@id": `https://limban.com/dining/${experience.url}#restaurant`,
  "name": experience.restaurantName,
  "description": `${experience.shortIntro} Located in the heart of Tadoba National Park, offering an intimate dining experience that celebrates local flavours and sustainable cuisine.`,
  "url": `https://limban.com/dining/${experience.url}`,
  "image": schemaImages,
  "address": {
    "@type": "PostalAddress",
    "streetAddress": "Survey No. 306, Village Mudholi, Taluka Bhadravati",
    "addressLocality": "Tadoba",
    "addressRegion": "Maharashtra",
    "postalCode": "442906",
    "addressCountry": "IN"
  },
  "geo": {
    "@type": "GeoCoordinates",
    "latitude": 20.25602486093492,
    "longitude": 79.2847888101826
  },
  "servesCuisine": ["Indian Cuisine", "Farm-to-Table", "International Cuisine"],
  "priceRange": "₹₹₹",
  "telephone": "+91-90226-80451",
  "openingHours": "Mo-Su 07:00-22:00",
  "acceptsReservations": true,
  "partOf": {
    "@type": "Hotel",
    "@id": "https://limban.com/#hotel",
    "name": "Limban Resort"
  }
};
---

<link rel="preload" as="image" href={heroImageUrl} fetchpriority="high" />

<Layout>
  <AstroSEO
    slot="head"
    title={`${experience.restaurantName} | Dining Experience - Limban Resort`}
    description={`Experience authentic dining at ${experience.restaurantName} - ${experience.shortIntro} Discover flavours that connect you to the heart of Tadoba National Park.`}
    canonical={`https://limban.com/dining/${experience.url}`}
    openGraph={{
      title: `${experience.restaurantName} - Dining Experience at Limban Resort`,
      description: `${experience.shortIntro} Experience authentic flavours and intimate dining in the wilderness of Tadoba National Park.`,
      image: schemaHeroImage,
      type: "website",
      url: `https://limban.com/dining/${experience.url}`,
    }}
    jsonLd={restaurantSchema}
  />

  <a href="#main-content" title="Skip to main content" class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 bg-amber-400 text-gray-900 px-4 py-2 rounded z-50">
    Skip to main content
  </a>

  <div class="bg-gray-950 text-gray-100 font-sans antialiased selection:bg-gray-700">
    <!-- Hero Section with Processed Image (same pattern as rooms) -->
    <section class="relative pt-44 pb-16 overflow-hidden bg-gray-900" role="banner">
      {heroImageData && (
        <img
          src={heroImageUrl}
          alt={`${experience.restaurantName} dining experience at Limban Resort`}
          loading="eager"
          fetchpriority="high"
          class="absolute inset-0 w-full h-full opacity-50 object-cover"
        />
      )}
      <!-- Enhanced gradient overlay -->
      <div class="absolute inset-0 bg-gradient-to-b from-gray-900/95 via-gray-900/70 to-gray-900/95"></div>

      <!-- Subtle animated overlay -->
      <div class="absolute inset-0 bg-gradient-to-r from-transparent via-amber-400/5 to-transparent animate-pulse"></div>

      <main id="main-content" class="relative z-10 max-w-7xl mx-auto px-6" role="main">
        <div class="text-center mb-12">
          <div class="text-sm text-gray-300 tracking-[0.2em] uppercase mb-4">
            Limban Dining Experience
          </div>
          <h1 class="font-serif italic text-4xl md:text-6xl lg:text-7xl text-white drop-shadow-lg mb-6">
            {experience.restaurantName}
          </h1>

          {experience.shortIntro && (
            <div class="mt-8 p-8 bg-black/40 backdrop-blur-lg rounded-3xl inline-block border border-gray-700/50">
              <p class="text-lg md:text-xl text-gray-200 leading-relaxed max-w-4xl">
                {experience.shortIntro}
              </p>
            </div>
          )}
        </div>
      </main>
    </section>

    <!-- Breadcrumb Navigation (exact same as rooms) -->
    <nav class="py-6 bg-gray-900/50 border-b border-gray-800" aria-label="Breadcrumb">
      <div class="max-w-7xl mx-auto px-6">
        <ol class="flex items-center justify-center space-x-2 text-sm">
          <li>
            <a href="/" title="Return to Limban Resort homepage" class="text-gray-400 hover:text-amber-400 transition-colors duration-300 flex items-center">
              <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"></path>
              </svg>
              Home
            </a>
          </li>
          <li>
            <svg class="w-4 h-4 text-gray-600" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
            </svg>
          </li>
          <li>
            <a href="/dining" title="View all dining experiences at Limban Resort" class="text-gray-400 hover:text-amber-400 transition-colors duration-300">Dining</a>
          </li>
          <li>
            <svg class="w-4 h-4 text-gray-600" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
            </svg>
          </li>
          <li>
            <span class="text-amber-400 font-medium">{experience.restaurantName}</span>
          </li>
        </ol>
      </div>
    </nav>

    <!-- Gallery Section with Universal Components (exact same pattern as rooms) -->
    <section class="py-32 bg-gray-800">
      <div class="max-w-7xl mx-auto px-6">
        <header class="text-center mb-16">
          <div class="inline-block px-6 py-2 bg-amber-400/10 border border-amber-400/30 rounded-full mb-8">
            <span class="text-amber-400 text-sm font-medium tracking-widest uppercase">Visual Journey</span>
          </div>
          <h2 class="font-serif italic text-4xl md:text-6xl text-white mb-6">
            {experience.restaurantName} Gallery
          </h2>
          <p class="text-xl text-gray-300 max-w-2xl mx-auto">
            Discover the atmosphere and authentic flavors of our dining experience
          </p>
        </header>
        
        <UniversalGallery rawImages={experience.images} galleryType="dining" />

      </div>
    </section>

    <!-- Experience Details Section -->
    <section class="py-32 bg-gray-900">
      <div class="max-w-7xl mx-auto px-6">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-32 items-start">
          <!-- Left Column - Experience & Philosophy -->
          <div class="space-y-16">
            <!-- Experience description -->
            <div>
              <div class="inline-block px-4 py-2 bg-amber-400/10 border border-amber-400/30 rounded-full mb-6">
                <span class="text-amber-400 text-sm font-medium tracking-widest uppercase">Experience</span>
              </div>
              <h2 class="font-serif italic text-3xl md:text-5xl text-white mb-8">
                {experience.restaurantName}'s Story
              </h2>
              <p class="text-xl text-gray-300 leading-relaxed mb-8">
                {experience.shortIntro}
              </p>
              
              {experience.longDescription && (
                <div class="text-lg text-gray-300 leading-relaxed">
                  <p>{experience.longDescription}</p>
                </div>
              )}
            </div>

            <!-- Dining Philosophy -->
            <div>
              <div class="inline-block px-4 py-2 bg-amber-400/10 border border-amber-400/30 rounded-full mb-6">
                <span class="text-amber-400 text-sm font-medium tracking-widest uppercase">Philosophy</span>
              </div>
              <h3 class="font-serif italic text-3xl md:text-4xl text-white mb-6">
                Fresh. Local. Authentic.
              </h3>
              <p class="text-xl text-gray-300 mb-12">
                Every dish tells the story of Tadoba's wilderness, crafted with locally sourced ingredients and prepared with passion.
              </p>

              <!-- Interactive dining features grid -->
              <div class="grid grid-cols-2 md:grid-cols-3 gap-4">
                {['Local Ingredients', 'Cooked to Order', 'Personal Touch', 'Farm to Table', 'Seasonal Menu', 'Wild Setting'].map((feature) => (
                  <div key={feature} class="group/tooltip relative">
                    <div class="p-6 bg-gray-800/60 border border-gray-700/50 rounded-2xl hover:border-amber-400/50 hover:bg-gray-700/60 transition-all duration-500 hover:-translate-y-2 hover:shadow-xl hover:shadow-amber-400/10 flex flex-col items-center text-center">
                      <div class="mb-4 w-16 h-16 flex items-center justify-center bg-gray-600/30 rounded-2xl group-hover:bg-amber-400/20 transition-all duration-500 group-hover:scale-110">
                        {feature === 'Local Ingredients' && (
                          <Icon name="ph:map-pin-simple" class="w-8 h-8 text-gray-400 group-hover:text-amber-300 transition-colors duration-300" />
                        )}
                        {feature === 'Cooked to Order' && (
                          <Icon name="material-symbols-light:skillet-outline" class="w-8 h-8 text-gray-400 group-hover:text-amber-300 transition-colors duration-300" />
                        )}
                        {feature === 'Personal Touch' && (
                          <Icon name="ph:heart-straight" class="w-8 h-8 text-gray-400 group-hover:text-amber-300 transition-colors duration-300" />
                        )}
                        {feature === 'Farm to Table' && (
                          <Icon name="material-symbols-light:eco-outline" class="w-8 h-8 text-gray-400 group-hover:text-amber-300 transition-colors duration-300" />
                        )}
                        {feature === 'Seasonal Menu' && (
                          <Icon name="carbon:time" class="w-8 h-8 text-gray-400 group-hover:text-amber-300 transition-colors duration-300" />
                        )}
                        {feature === 'Wild Setting' && (
                          <Icon name="iconoir:pine-tree" class="w-8 h-8 text-gray-400 group-hover:text-amber-300 transition-colors duration-300" />
                        )}
                      </div>
                      <h4 class="text-sm font-medium text-gray-300 group-hover:text-amber-100 transition-colors duration-300 leading-tight">
                        {feature}
                      </h4>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
          <!-- Right Column - Enhanced Reservation Form -->
          <DiningReservationForm
            itemName={experience.restaurantName}
            itemSlug={experience.url}
          />
        </div>
      </div>
    </section>

    <!-- Other Dining Experiences Section with Processed Images -->
    <section class="py-32 bg-gradient-to-b from-gray-950 to-gray-900 border-t border-gray-800">
      <div class="max-w-7xl mx-auto px-6">
        <header class="text-center mb-16">
          <div class="inline-block px-6 py-2 bg-amber-400/10 border border-amber-400/30 rounded-full mb-8">
            <span class="text-amber-400 text-sm font-medium tracking-widest uppercase">More Options</span>
          </div>
          <h2 class="font-serif italic text-4xl md:text-5xl text-white mb-6">
            Discover Other Experiences
          </h2>
          <p class="text-xl text-gray-300 max-w-3xl mx-auto">
            Each dining venue offers its own unique flavors and ambiance for an unforgettable culinary journey
          </p>
        </header>

        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-8">
          {data.experiences.filter(otherExperience => otherExperience.url !== experience.url).map((otherExperience) => {
            // Process other dining hero images
            const otherExperienceHeroImage = otherExperience.images?.[0] ? {
              ...otherExperience.images[0],
              context: {
                pageType: 'dining',
                contentName: otherExperience.restaurantName,
                imageType: 'card'
              }
            } : null;

            return (
              <article key={otherExperience.id} class="group relative aspect-[4/5] overflow-hidden rounded-2xl border border-gray-800/50 hover:border-amber-400/50 transition-all duration-700 hover:scale-105 hover:shadow-2xl hover:shadow-amber-400/20">
                <a href={`/dining/${otherExperience.url}`} title={`Explore ${otherExperience.restaurantName} dining experience`} class="block w-full h-full">
                {otherExperienceHeroImage && (
                  <img
                    src={imageService.processImage(otherExperienceHeroImage, 'serviceCard', { quality: 60 })}
                    alt={`${otherExperience.restaurantName} dining experience`}
                    loading="lazy"
                    class="absolute inset-0 w-full h-full group-hover:scale-110 transition-transform duration-700 object-cover"
                  />
                )}

                  <div class="absolute inset-0 bg-gradient-to-t from-black/90 via-black/40 to-transparent group-hover:from-black/70 group-hover:via-black/30 transition-all duration-500" />

                  <div class="absolute inset-0 flex flex-col justify-end p-5">
                    <h3 class="font-serif italic text-xl text-white mb-2 group-hover:text-amber-300 transition-colors duration-300 line-clamp-2">
                      {otherExperience.restaurantName}
                    </h3>
                    <p class="text-gray-300 text-sm mb-3 line-clamp-3 group-hover:text-gray-100 transition-colors">
                      {otherExperience.shortIntro || "Discover our culinary offerings"}
                    </p>
                    <div class="flex items-center justify-between">
                      <div class="text-sm font-bold text-amber-400 opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-y-2 group-hover:translate-y-0">
                        Explore Now
                      </div>
                      <div class="opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-x-2 group-hover:translate-x-0">
                        <svg class="w-5 h-5 text-amber-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"/>
                        </svg>
                      </div>
                    </div>
                  </div>
                  
                  <!-- Glow effect -->
                  <div class="absolute inset-0 rounded-2xl bg-gradient-to-br from-amber-500/0 to-orange-500/0 group-hover:from-amber-500/10 group-hover:to-orange-500/10 transition-all duration-700"></div>
                </a>
              </article>
            );
          })}
        </div>
      </div>
    </section>
  </div>

  />
  <!-- Smart btn -->
  <SmartReserveButton buttonText={`Reserve ${experience.restaurantName}`} />

  <!-- Universal Gallery Modal -->
  <GalleryModal />
</Layout>

<style>
  /* Performance optimizations */
  .group {
    will-change: transform;
  }

  .transition-transform {
    will-change: transform;
  }

  /* Respect user motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .transition-all,
    .transition-transform,
    .transition-colors,
    .hover\:scale-105,
    .hover\:scale-110,
    .animate-pulse {
      transition: none !important;
      transform: none !important;
      animation: none !important;
    }
  }
</style>
