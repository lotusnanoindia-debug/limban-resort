---
export interface Props {
  itemName: string;
  itemSlug: string;
}

const { itemName, itemSlug } = Astro.props;
const pageUrl = Astro.url.href;
---

<!-- Load Flatpickr CSS -->
<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css"
/>
<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/flatpickr/dist/themes/dark.css"
/>

<section aria-labelledby="reserve-table-heading">
  <h2
    id="reserve-table-heading"
    class="font-serif italic text-3xl md:text-4xl text-white mb-6"
  >
    Reserve a Table: {itemName}
  </h2>
  <p class="text-gray-300 mb-12">
    Request a table and our team will call you to confirm your dining
    experience.
  </p>

  <!-- Success/Error Message -->
  <div id="dining-form-message" class="hidden mb-6 p-4 rounded-xl text-center">
  </div>

  <form
    id="dining-reservation-form"
    class="bg-gradient-to-br from-gray-800/50 to-gray-900/50 backdrop-blur-xl border border-gray-700 rounded-2xl p-8"
  >
    <input type="hidden" name="form-name" value="dining-reservation" />
    <input type="hidden" name="pageUrl" value={pageUrl} />
    <input type="hidden" name="itemName" value={itemName} />
    <input type="hidden" name="itemSlug" value={itemSlug} />

    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <!-- Full Name -->
      <div class="md:col-span-2">
        <label for="fullName" class="block text-sm text-gray-300 mb-2"
          >Full Name</label
        >
        <input
          id="fullName"
          name="fullName"
          required
          minlength="3"
          class="w-full rounded-md bg-gray-800 border border-gray-700 px-4 py-3 text-white focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-colors"
        />
      </div>

      <!-- Phone -->
      <div class="md:col-span-2">
        <label for="phone" class="block text-sm text-gray-300 mb-2"
          >Phone / WhatsApp</label
        >
        <input
          id="phone"
          name="phone"
          type="tel"
          required
          class="w-full rounded-md bg-gray-800 border border-gray-700 px-4 py-3 text-white focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-colors"
        />
      </div>

      <!-- Date -->
      <div>
        <label for="dining-date" class="block text-sm text-gray-300 mb-2"
          >Date</label
        >
        <input
          id="dining-date"
          name="diningDate"
          type="text"
          required
          class="w-full rounded-md bg-gray-800 border border-gray-700 px-4 py-3 text-white focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-colors cursor-pointer"
        />
      </div>

      <!-- Time -->
      <div>
        <label for="dining-time" class="block text-sm text-gray-300 mb-2"
          >Time</label
        >
        <select
          id="dining-time"
          name="diningTime"
          class="w-full rounded-md bg-gray-800 border border-gray-700 px-4 py-3 text-white focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-colors"
        >
          <option>Dinner (7:30 PM - 10:00 PM)</option>
          <option>Lunch (12:30 PM - 2:30 PM)</option>
        </select>
      </div>

      <!-- Guests -->
      <div class="md:col-span-2">
        <label for="guests" class="block text-sm text-gray-300 mb-2"
          >Number of Guests</label
        >
        <input
          id="guests"
          name="guests"
          type="number"
          min="1"
          max="20"
          value="2"
          class="w-full rounded-md bg-gray-800 border border-gray-700 px-4 py-3 text-white focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-colors"
        />
      </div>

      <!-- Notes -->
      <div class="md:col-span-2">
        <label for="notes" class="block text-sm text-gray-300 mb-2"
          >Notes (Allergies, Occasion, etc.)</label
        >
        <textarea
          id="notes"
          name="notes"
          rows="3"
          class="w-full rounded-md bg-gray-800 border border-gray-700 px-4 py-3 text-white focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-colors"
        ></textarea>
      </div>
    </div>

    <div class="text-center pt-8">
      <button
        type="submit"
        id="dining-submit-btn"
        class="w-full md:w-auto bg-gradient-to-r from-amber-500 to-orange-600 text-white font-semibold px-8 py-4 rounded-xl transition-all duration-300 hover:shadow-xl hover:-translate-y-1 hover:from-amber-600 hover:to-orange-700 cursor-pointer disabled:opacity-50 disabled:cursor-not-allowed"
      >
        Request a Table
      </button>
    </div>
  </form>
</section>

<script>
  import(
    "https://cdn.jsdelivr.net/npm/flatpickr@4.6.13/dist/flatpickr.min.js"
  ).then(() => {
    flatpickr("#dining-date", {
      dateFormat: "M j, Y",
      minDate: "today",
      allowInput: false,
      theme: "dark",
    });
  });

  document.addEventListener("DOMContentLoaded", async () => {
    try {
      const { supabase } = await import("../lib/supabase.js");
      const form = document.getElementById("dining-reservation-form");
      const submitBtn = document.getElementById("dining-submit-btn");
      const messageDiv = document.getElementById("dining-form-message");

      if (!form) return;

      form.addEventListener("submit", async (e) => {
        e.preventDefault();
        submitBtn.disabled = true;
        submitBtn.textContent = "Sending Request...";

        try {
          const formData = new FormData(form);
          const submission = {
            form_name: formData.get("form-name"),
            pageUrl: formData.get("pageUrl"),
            itemName: formData.get("itemName"),
            itemSlug: formData.get("itemSlug"),
            fullName: formData.get("fullName"),
            phone: formData.get("phone"),
            diningDate: formData.get("diningDate"),
            diningTime: formData.get("diningTime"),
            guests: parseInt(formData.get("guests")),
            message: formData.get("notes"),
          };

          const { error } = await supabase
            .from("contact_submissions")
            .insert([submission]);
          if (error) throw error;

          showSuccessMessage();
        } catch (error) {
          console.error("Submission error:", error);
          showMessage(
            "Sorry, there was an error. Please try again or call us.",
            "error",
          );
          submitBtn.disabled = false;
          submitBtn.textContent = "Request a Table";
        }
      });

      function showMessage(text, type) {
        messageDiv.innerHTML = text;
        messageDiv.className = `mb-6 p-4 rounded-xl text-center ${
          type === "success"
            ? "bg-green-900/50 text-green-300 border border-green-700"
            : type === "error"
              ? "bg-red-900/50 text-red-300 border border-red-700"
              : "bg-blue-900/50 text-blue-300 border border-blue-700"
        }`;
        messageDiv.classList.remove("hidden");
      }

      function showSuccessMessage() {
        form.style.display = "none";
        messageDiv.innerHTML = `
          <div class="text-center py-12">
            <div class="text-6xl mb-6">ðŸŽ‰</div>
            <h3 class="text-2xl font-serif italic text-white mb-4">Thank You!</h3>
            <p class="text-lg text-gray-300">Your table request has been sent.</p>
            <p class="text-gray-400 mt-2">Our team will call you shortly to confirm.</p>
          </div>
        `;
        messageDiv.className =
          "bg-gradient-to-br from-gray-800/50 to-gray-900/50 backdrop-blur-xl border border-green-600 rounded-2xl p-8 text-center";
        messageDiv.classList.remove("hidden");
      }
    } catch (error) {
      console.error("Failed to load Supabase for dining form:", error);
    }
  });
</script>
