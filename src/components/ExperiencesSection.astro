---
export interface Props {
  experiences?: {
    aboveHeader?: string;
    title?: string;
    description?: string;
    experience?: Array<{
      title: string;
      description: string;
      image?: { url: string };
      imageAltText?: string;
      feature?: Array<{ text: string }>;
      link?: string;
      buttonText?: string;
      optimizedImage?: {
        src: string;
        lqip: string;
        width: number;
        height: number;
      };
    }>;
  };
  gridClass?: string;
}

const { experiences, gridClass = "grid-cols-1 md:grid-cols-3" } = Astro.props;
---

{experiences && (
  <section id="experiences" class="py-24 md:py-32 bg-gray-900" role="region" aria-labelledby="experiences-title">
    <div class="max-w-7xl mx-auto px-6">
      
      <!-- Header -->
      <header class="text-center mb-16">
        <div class="inline-block px-4 py-2 bg-amber-400/10 border border-amber-400/30 rounded-full mb-6">
          <span class="text-amber-400 text-xs font-medium tracking-widest uppercase">
            {experiences.aboveHeader}
          </span>
        </div>
        <h2 id="experiences-title" class="font-serif italic text-3xl md:text-5xl lg:text-6xl text-white mb-6">
          {experiences.title}
        </h2>
        <p class="text-lg md:text-xl text-gray-300 max-w-3xl mx-auto leading-relaxed">
          {experiences.description}
        </p>
      </header>
      
      <!-- ðŸŽ¯ OPTIMIZED: Dynamic grid with clean cards -->
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
        {experiences.experience?.map((experience, index) => (
          <article 
            key={index}
            class="group bg-gray-800/50 border border-gray-700 rounded-2xl overflow-hidden transition-all duration-500 hover:border-gray-600 hover:-translate-y-1 hover:shadow-xl"
          >
            
            <!-- ðŸŽ¯ OPTIMIZED: Image with LQIP -->
            <div class="relative aspect-[2/1] overflow-hidden bg-gray-800">
              {/* LQIP background */}
              {experience.optimizedImage?.lqip && (
                <img
                  src={experience.optimizedImage.lqip}
                  alt=""
                  class="absolute inset-0 w-full h-full object-cover blur-sm"
                  aria-hidden="true"
                />
              )}
              
              {/* Main image */}
              <img
                src={experience.optimizedImage?.src || experience.image?.url}
                alt={`${experience.imageAltText || experience.title} - unique experience at Limban Resort`}
                class="relative w-full h-full object-cover transition-transform duration-700 group-hover:scale-105"
                loading={index < 2 ? "eager" : "lazy"}
                decoding="async"
                sizes="(max-width: 768px) 100vw, (max-width: 1024px) 50vw, 33vw"
              />
            </div>
            
            <!-- Content -->
            <div class="p-6">
              <h3 class="font-serif italic text-xl md:text-2xl text-white mb-4 leading-tight">
                {experience.title}
              </h3>
              
              <p class="text-gray-300 text-sm leading-relaxed mb-6 line-clamp-4">
                {experience.description}
              </p>
              
              
              {/* CTA Button */}
              {experience.link && (
                <a
                  href={experience.link}
                  class="home-cta w-full"
                >
                  {experience.buttonText || "Learn More"}
                  <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                  </svg>
                </a>
              )}
            </div>
          </article>
        ))}
      </div>
    </div>
  </section>
)}

<style>
  /* ðŸŽ¯ UTILITY: Line clamp for consistent text height */
  .line-clamp-4 {
    display: -webkit-box;
    -webkit-line-clamp: 4;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* ðŸŽ¯ PERFORMANCE: Smooth transforms */
  .group {
    will-change: transform;
  }
</style>
