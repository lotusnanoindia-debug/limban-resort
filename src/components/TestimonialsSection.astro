---
import { supabase } from '../lib/supabase';

const { data: reviews } = await supabase
  .from('reviews')
  .select('*')
  .eq('rating', 5)
  .not('review_text', 'is', null)
  .not('reviewer_photo_url', 'is', null)
  .order('published_date', { ascending: false })
  .limit(50);

const shuffledReviews = reviews?.sort(() => 0.5 - Math.random()).slice(0, 12) || [];
---

<section class="py-32 bg-gray-950">
  <div class="max-w-7xl mx-auto px-6">
    
    <!-- Header -->
    <div class="text-center mb-20">
      <div class="inline-block px-6 py-2 bg-amber-400/10 border border-amber-400/30 rounded-full mb-8">
        <span class="text-amber-400 text-sm font-medium tracking-widest uppercase">Verified Reviews</span>
      </div>
      <h2 class="font-serif text-5xl md:text-7xl text-white mb-8 leading-tight">
        Words from the Wild
      </h2>
      <p class="text-xl text-gray-300 font-light leading-relaxed max-w-4xl mx-auto">
        Real experiences from real guests. Every review verified by Google and TripAdvisor.
      </p>
    </div>
    <!-- Swipe Hint -->
    <div class="flex items-center justify-center gap-2 text-xs text-gray-500 mb-6">
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16l-4-4m0 0l4-4m-4 4h18"/>
      </svg>
      <span>Swipe</span>
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"/>
      </svg>
    </div>

    <!-- Carousel -->
    <div class="relative">
      <div 
        id="carousel" 
        class="overflow-x-auto snap-x snap-mandatory scrollbar-hide scroll-smooth"
      >
        <div class="flex gap-6">
          {shuffledReviews.map((review) => (
            <article class="snap-center w-80 flex-shrink-0 bg-gradient-to-br from-gray-900/50 to-gray-800/50 backdrop-blur-xl border border-gray-700 hover:border-amber-400/50 rounded-3xl p-8 transition-colors duration-300">
              
              <!-- Photo -->
              <div class="flex justify-center mb-8">
                <div class="w-20 h-20 rounded-full overflow-hidden border-2 border-gray-600 bg-gray-800 flex items-center justify-center">
                  <img 
                    src={review.reviewer_photo_url}
                    alt={review.reviewer_name || 'Guest'}
                    class="w-full h-full object-cover"
                    loading="lazy"
                    onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"
                  />
                  <span class="hidden text-3xl font-semibold text-gray-400 uppercase">
                    {review.reviewer_name?.charAt(0) || 'G'}
                  </span>
                </div>
              </div>

              <!-- Stars -->
              <div class="flex gap-1 justify-center mb-6">
                {[...Array(5)].map(() => (
                  <svg class="w-5 h-5 text-amber-400 fill-current" viewBox="0 0 20 20">
                    <path d="M10 15l-5.878 3.09 1.123-6.545L.489 6.91l6.572-.955L10 0l2.939 5.955 6.572.955-4.756 4.635 1.123 6.545z"/>
                  </svg>
                ))}
              </div>

              <!-- Title -->
              {review.review_title && (
                <h3 class="font-serif text-xl text-amber-400 mb-4 text-center line-clamp-2">
                  {review.review_title}
                </h3>
              )}

              <!-- Review Text -->
              <p class="text-gray-300 text-center leading-relaxed font-light mb-8 h-36">
                {review.review_text.length > 200 
                  ? review.review_text.substring(0, 150).trim() + '...' 
                  : review.review_text}
              </p>
              <!-- Details -->
              <div class="text-center pt-6 border-t border-gray-700/50">
                <div class="font-semibold text-lg text-amber-400 mb-1">
                  {review.reviewer_name || 'Guest'}
                </div>
                {review.reviewer_location && (
                  <div class="text-sm text-gray-400 mb-2">
                    {review.reviewer_location}
                  </div>
                )}
                <div class="flex items-center justify-center gap-2 text-xs text-gray-500">
                  <span class="uppercase tracking-wider">
                    {review.source === 'google' ? 'Google' : 'TripAdvisor'}
                  </span>
                  {review.published_date && (
                    <>
                      <span>â€¢</span>
                      <span>{new Date(review.published_date).toLocaleDateString('en-GB', { month: 'short', year: 'numeric' })}</span>
                    </>
                  )}
                </div>
              </div>
            </article>
          ))}
        </div>
      </div>

      <!-- Dots - Mobile Only -->
      <div id="dots" class="flex md:hidden justify-center gap-2 mt-8">
        {shuffledReviews.map((_, i) => (
          <button 
            class="dot h-2 w-2 rounded-full bg-gray-700 transition-all duration-300"
            data-index={i}
            aria-label={`Go to review ${i + 1}`}
          />
        ))}
      </div>
    </div>

    <!-- CTA -->
    <div class="text-center mt-16">
      <a 
        href="/reviews" 
        class="inline-flex items-center gap-3 px-8 py-4 bg-gradient-to-r from-gray-700 to-gray-800 hover:from-gray-600 hover:to-gray-700 text-white font-semibold rounded-lg transition-all duration-300"
      >
        <span>Read All Reviews</span>
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"/>
        </svg>
      </a>
    </div>
  </div>
</section>

<style>
  .scrollbar-hide {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  .line-clamp-6 {
    display: -webkit-box;
    -webkit-line-clamp: 6;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>

<script>
  const carousel = document.getElementById('carousel');
  const dots = document.querySelectorAll('.dot');

  if (carousel && dots.length > 0 && window.innerWidth < 768) {
    const cardWidth = 344; // 320 + 24

    function updateDots() {
      const scrollLeft = carousel.scrollLeft;
      const index = Math.round(scrollLeft / cardWidth);
      
      dots.forEach((dot, i) => {
        if (i === index) {
          dot.classList.add('bg-amber-400', 'w-6');
          dot.classList.remove('w-2');
        } else {
          dot.classList.remove('bg-amber-400', 'w-6');
          dot.classList.add('w-2');
        }
      });
    }

    carousel.addEventListener('scroll', updateDots, { passive: true });

    dots.forEach((dot, i) => {
      dot.addEventListener('click', () => {
        carousel.scrollTo({ left: cardWidth * i, behavior: 'smooth' });
      });
    });

    updateDots();
  }
</script>
