---
interface Props {
  buttonText?: string;
  position?: "bottom-left" | "bottom-right";
}

const { buttonText = "Reserve Now", position = "bottom-right" } = Astro.props;

const positionClass =
  position === "bottom-left" ? "bottom-4 left-4" : "bottom-4 right-4";
---

<button
  id="auto-float-btn"
  class={`fixed ${positionClass} z-50 bg-amber-500 hover:bg-amber-600 text-white px-3 py-2 sm:px-4 sm:py-2.5 rounded-full shadow-lg hover:shadow-xl transition-all duration-300 text-xs sm:text-sm font-semibold opacity-0 pointer-events-none`}
>
  {buttonText}
</button>

<script>
  function init() {
    const btn = document.getElementById("auto-float-btn");
    if (!btn) return;

    function findForm() {
      return (
        document.querySelector("form") ||
        document.querySelector('[id*="form"]') ||
        document.querySelector('[class*="form"]')
      );
    }

    function setup() {
      const form = findForm();

      if (form) {
        new IntersectionObserver(([entry]) => {
          btn.style.opacity = entry.isIntersecting ? "0" : "1";
          btn.style.pointerEvents = entry.isIntersecting ? "none" : "auto";
        }).observe(form);

        btn.onclick = () => {
          form.scrollIntoView({ behavior: "smooth", block: "center" });

          setTimeout(() => {
            form.style.boxShadow = "0 0 40px rgba(245, 158, 11, 0.5)";
            setTimeout(() => (form.style.boxShadow = ""), 2000);
          }, 800);
        };
      } else {
        setTimeout(setup, 500);
      }
    }

    setup();
  }

  // Wait for DOM
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", init);
  } else {
    init();
  }
</script>
