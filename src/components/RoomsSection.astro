---
import imageService from "../utils/ImageService.js";

const { rooms = [], specialDeal } = Astro.props;

// Process rooms with ImageService URLs
const validatedRooms = rooms
  .filter((room) => room?.roomName && room?.id)
  .map((room, index) => {
    const heroImageData = room.heroImage || room.roomImage;
    const imageUrl = heroImageData
      ? imageService.processImage(
          {
            ...heroImageData,
            context: {
              pageType: "homepage",
              contentName: room.roomName,
              imageType: "card",
              index,
            },
          },
          "roomCardHome",
          { quality: 70 },
        )
      : "/img/room-placeholder.webp";

    return {
      ...room,
      imageUrl,
      safePrice: Number(room.basePrice) || 0,
      safeUrl: room.url?.startsWith("/")
        ? room.url
        : `/rooms/${room.url || room.id}`,
      alt: `${room.roomName} - luxury accommodation at Limban Resort Tadoba`,
      priority: index < 3,
    };
  });
---

<section
  id="accommodations"
  class="py-24 md:py-32 bg-gray-0"
  role="region"
  aria-labelledby="rooms-title"
>
  <div class="max-w-7xl mx-auto px-6">
    <!-- Header -->
    <header class="text-center mb-12">
      <div
        class="inline-block px-4 py-2 bg-amber-400/10 border border-amber-400/30 rounded-full mb-6"
      >
        <span
          class="text-amber-400 text-xs font-medium tracking-widest uppercase"
        >
          Your Luxury Stay Awaits
        </span>
      </div>
      <h2
        id="rooms-title"
        class="font-serif text-4xl md:text-5xl lg:text-6xl text-white mb-6"
      >
        Signature Suite Types
      </h2>
      <p
        class="text-lg md:text-xl text-gray-300 max-w-3xl mx-auto leading-relaxed"
      >
        Each uniquely crafted to provide the perfect blend of luxury and
        comfort.
      </p>
    </header>

    <!-- Special Deal - Refined -->
    {
      specialDeal?.html && (
        <div class="relative max-w-2xl mx-auto mb-16">
          <div class="absolute inset-0 bg-gradient-to-r from-amber-400/20 to-orange-500/20 rounded-2xl blur-xl" />
          <div class="relative bg-gradient-to-br from-gray-900/90 to-gray-800/90 backdrop-blur-xl border-2 border-amber-400/40 rounded-2xl p-6 md:p-8 text-center shadow-2xl">
            <div
              class="text-amber-300 font-medium text-base md:text-lg leading-relaxed"
              set:html={specialDeal.html}
            />
          </div>
        </div>
      )
    }

    <!-- Swipe Hint - Mobile Only -->
    <div
      class="flex md:hidden items-center justify-center gap-2 text-xs text-gray-500 mb-6"
    >
      <svg
        class="w-4 h-4"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M7 16l-4-4m0 0l4-4m-4 4h18"></path>
      </svg>
      <span>Swipe to explore all rooms</span>
      <svg
        class="w-4 h-4"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
      </svg>
    </div>

    <!-- Mobile Swiper -->
    <div class="md:hidden">
      <div
        id="rooms-carousel"
        class="overflow-x-auto snap-x snap-mandatory scrollbar-hide scroll-smooth"
      >
        <div class="flex gap-6 px-1">
          {
            validatedRooms.length === 0 ? (
              <div class="w-full text-center py-16">
                <p class="text-gray-400 text-lg">
                  Rooms information is being updated. Please contact us for
                  availability.
                </p>
                <a
                  href="/contact"
                  class="inline-block mt-4 text-amber-400 hover:text-amber-300 underline"
                >
                  Contact Us
                </a>
              </div>
            ) : (
              validatedRooms.map((room, index) => (
                <article
                  key={room.id}
                  class="snap-center w-80 flex-shrink-0 bg-gray-900/50 border border-gray-700 rounded-2xl overflow-hidden transition-all duration-500 hover:border-gray-600"
                >
                  <div class="relative aspect-[4/3] overflow-hidden bg-gray-800">
                    <img
                      src={room.imageUrl}
                      alt={room.alt}
                      loading={room.priority ? "eager" : "lazy"}
                      class="w-full h-full object-cover transition-transform duration-700 hover:scale-105"
                      sizes="(max-width: 768px) 320px, 320px"
                    />
                  </div>

                  <div class="p-6">
                    <h3 class="font-serif text-3xl text-white mb-3">
                      {room.roomName}
                    </h3>

                    <p class="text-gray-400 text-sm leading-relaxed mb-6 line-clamp-3">
                      {room.shortDescription}
                    </p>

                    <div class="flex items-center justify-between">
                      <div>
                        <div class="flex items-baseline space-x-1">
                          <span class="text-sm text-gray-400">From</span>
                          <span class="text-xl font-bold text-white">
                            ₹{room.safePrice.toLocaleString()}
                          </span>
                        </div>
                        <div class="text-xs text-gray-500">
                          per night • breakfast incl.
                        </div>
                      </div>

                      <a
                        href={room.safeUrl}
                        class="home-cta"
                        title={room.roomName}
                      >
                        <span>More</span>
                        <svg
                          class="w-4 h-4 ml-1"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M9 5l7 7-7 7"
                          />
                        </svg>
                      </a>
                    </div>
                  </div>
                </article>
              ))
            )
          }
        </div>
      </div>

      <!-- Dots - Mobile Only -->
      {
        validatedRooms.length > 0 && (
          <div id="rooms-dots" class="flex justify-center gap-2 mt-8">
            {validatedRooms.map((_, i) => (
              <button
                class="dot h-2 w-2 rounded-full bg-amber-400 transition-all duration-300"
                data-index={i}
                aria-label={`Go to room ${i + 1}`}
              />
            ))}
          </div>
        )
      }
    </div>

    <!-- Desktop Grid -->
    <div class="hidden md:grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {
        validatedRooms.length === 0 ? (
          <div class="col-span-full text-center py-16">
            <p class="text-gray-400 text-lg">
              Rooms information is being updated. Please contact us for
              availability.
            </p>
            <a
              href="/contact"
              class="inline-block mt-4 text-amber-400 hover:text-amber-300 underline"
            >
              Contact Us
            </a>
          </div>
        ) : (
          validatedRooms.map((room, index) => (
            <article
              key={room.id}
              class="group bg-gray-900/50 border border-gray-700 rounded-2xl overflow-hidden hover:border-gray-600 transition-all duration-500 hover:shadow-xl hover:-translate-y-1"
            >
              <div class="relative aspect-[4/3] overflow-hidden bg-gray-800">
                <img
                  src={room.imageUrl}
                  alt={room.alt}
                  loading={room.priority ? "eager" : "lazy"}
                  class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-105"
                  sizes="(max-width: 768px) 100vw, (max-width: 1024px) 50vw, 33vw"
                />
              </div>

              <div class="p-6">
                <h3 class="font-serif text-3xl text-white mb-3">
                  {room.roomName}
                </h3>

                <p class="text-gray-400 text-sm leading-relaxed mb-6 line-clamp-3">
                  {room.shortDescription}
                </p>

                <div class="flex items-center justify-between">
                  <div>
                    <div class="flex items-baseline space-x-1">
                      <span class="text-sm text-gray-400">From</span>
                      <span class="text-xl font-bold text-white">
                        ₹{room.safePrice.toLocaleString()}
                      </span>
                    </div>
                    <div class="text-xs text-gray-500">
                      per night • breakfast incl.
                    </div>
                  </div>

                  <a href={room.safeUrl} class="home-cta" title={room.roomName}>
                    <span class="md:hidden lg:inline">Learn&nbsp;</span>
                    <span>More</span>
                    <svg
                      class="w-4 h-4 ml-1"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M9 5l7 7-7 7"
                      />
                    </svg>
                  </a>
                </div>
              </div>
            </article>
          ))
        )
      }
    </div>
  </div>
</section>

<style>
  .scrollbar-hide {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  .group {
    will-change: transform;
  }
</style>

<script>
  const carousel = document.getElementById("rooms-carousel");
  const dots = document.querySelectorAll("#rooms-dots .dot");

  if (carousel && dots.length > 0) {
    const cardWidth = 344; // 320 + 24 gap

    function updateDots() {
      const scrollLeft = carousel.scrollLeft;
      const index = Math.round(scrollLeft / cardWidth);

      dots.forEach((dot, i) => {
        if (i === index) {
          dot.classList.add("bg-amber-400", "w-6");
          dot.classList.remove("bg-gray-700", "w-2");
        } else {
          dot.classList.remove("bg-amber-400", "w-6");
          dot.classList.add("bg-gray-700", "w-2");
        }
      });
    }

    carousel.addEventListener("scroll", updateDots, { passive: true });

    dots.forEach((dot, i) => {
      dot.addEventListener("click", () => {
        carousel.scrollTo({ left: cardWidth * i, behavior: "smooth" });
      });
    });

    updateDots();
  }
</script>
