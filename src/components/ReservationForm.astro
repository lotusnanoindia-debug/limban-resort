---
// Reservation Form - Standalone
import { RoomsDateRangePicker } from "@/components/RoomsDateRangePicker";

export interface Props {
  roomName: string;
  roomSlug: string;
  basePrice?: number;
}

const { roomName, roomSlug, basePrice } = Astro.props;
const pageUrl = Astro.url.href;
---

<section
  aria-labelledby="reservation-heading"
  class="lg:sticky lg:top-32 bg-gray-800/40 border border-gray-700/50 rounded-3xl p-8 backdrop-blur-sm"
>
  <h2
    id="reservation-heading"
    class="font-serif italic text-3xl md:text-5xl text-white mb-6"
  >
    <span class="text-amber-400">Reserve Now</span>
  </h2>
  <p class="text-gray-300 mb-6">
    Complete below form and our team will confirm your {roomName} reservation.
  </p>

  <p
    class="border border-amber-300 bg-amber-100/5 p-4 rounded-xl text-center text-gray-400 mb-8 flex items-center justify-center gap-2"
  >
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="h-5 w-5"
      viewBox="0 0 20 20"
      fill="currentColor"
    >
      <path
        d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.518.76a11.034 11.034 0 006.364 6.364l.76-1.518a1 1 0 011.06-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"
      ></path>
    </svg>
    <a
      href="tel:+919022680451"
      class="font-semibold text-amber-400 hover:text-amber-300 transition-colors duration-300 whitespace-nowrap"
    >
      +91 90226 80451
    </a>
  </p>

  <!-- Success/Error Message Container -->
  <div id="form-message" class="hidden mb-6 p-4 rounded-xl text-center"></div>

  <form
    id="reservation-form"
    name="reservation"
    class="sm:bg-gradient-to-br sm:from-gray-800/50 sm:to-gray-900/50 sm:backdrop-blur-xl sm:border sm:border-gray-700 sm:rounded-2xl sm:p-8"
  >
    <!-- Turnstile widget -->
    <div
      class="cf-turnstile"
      data-sitekey="0x4AAAAAAB08V5IJ7fONN28Y"
      data-theme="dark"
    >
    </div>

    <input type="hidden" name="form-name" value="reservation-room" />
    <input type="hidden" name="pageUrl" value={pageUrl} />
    <input type="hidden" name="roomName" value={roomName} />
    <input type="hidden" name="roomSlug" value={roomSlug} />
    {
      basePrice && (
        <input type="hidden" name="basePrice" value={String(basePrice)} />
      )
    }

    <div class="text-center pt-2">
      <div id="nights-message"></div>
    </div>

    <div class="mb-4">
      <label class="block text-sm text-gray-300 mb-2"
        >Your Check-In / Out *</label
      >
      <RoomsDateRangePicker client:load />
      <div
        id="nights-message"
        class="bg-gray-950 p-2 rounded-sm text-center mt-2 text-sm transition-opacity duration-500 ease-in-out opacity-0"
      >
      </div>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-x-6 gap-y-9">
      <!-- Contact -->
      <div>
        <label for="firstName" class="block text-sm text-gray-300 mb-2"
          >First Name *</label
        >
        <input
          id="firstName"
          name="firstName"
          required
          minlength="2"
          class="w-full rounded-md bg-gray-800 border border-gray-700 px-4 py-3 text-white focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-colors"
        />
      </div>
      <div>
        <label for="lastName" class="block text-sm text-gray-300 mb-2"
          >Last Name *</label
        >
        <input
          id="lastName"
          name="lastName"
          required
          minlength="2"
          class="w-full rounded-md bg-gray-800 border border-gray-700 px-4 py-3 text-white focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-colors"
        />
      </div>
      <div>
        <label for="email" class="block text-sm text-gray-300 mb-2"
          >Email *</label
        >
        <input
          id="email"
          name="email"
          type="email"
          pattern="[a-zA-Z0-9._%+\\-]+@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]{2,}"
          required
          class="w-full rounded-md bg-gray-800 border border-gray-700 px-4 py-3 text-white focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-colors"
        />
      </div>
      <div>
        <label for="phone" class="block text-sm text-gray-300 mb-2"
          >Phone/WhatsApp *</label
        >
        <input
          id="phone"
          name="phone"
          type="tel"
          class="w-full rounded-md bg-gray-800 border border-gray-700 px-4 py-3 text-white focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-colors"
          required
        />
      </div>

      <!-- Party Size -->
      <div>
        <label for="adults" class="block text-sm text-gray-300 mb-2"
          >Adults</label
        >
        <input
          id="adults"
          name="adults"
          type="number"
          min="1"
          max="12"
          value="2"
          class="w-full rounded-md bg-gray-800 border border-gray-700 px-4 py-3 text-white focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-colors"
        />
      </div>
      <div>
        <label for="children" class="block text-sm text-gray-300 mb-2"
          >Minors</label
        >
        <input
          id="children"
          name="children"
          type="number"
          min="0"
          max="12"
          value="0"
          class="w-full rounded-md bg-gray-800 border border-gray-700 px-4 py-3 text-white focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-colors"
        />
      </div>

      <!-- Safaris & Transfers -->
      <div>
        <label for="wantSafaris" class="block text-sm text-gray-300 mb-2"
          >Want Tiger Safaris?</label
        >
        <select
          id="wantSafaris"
          name="wantSafaris"
          class="w-full rounded-md bg-gray-800 border border-gray-700 px-4 py-3 text-white focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-colors"
        >
          <option value="yes">Yes, please arrange</option>
          <option value="no">No, room only</option>
          <option value="unsure">Unsure, please advise</option>
        </select>
      </div>
      <div>
        <label for="transfer" class="block text-sm text-gray-300 mb-2"
          >Need Airport Transfers?</label
        >
        <select
          id="transfer"
          name="transfer"
          class="w-full rounded-md bg-gray-800 border border-gray-700 px-4 py-3 text-white focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-colors"
        >
          <option>Yes, both ways</option>
          <option>Arrival only</option>
          <option>Departure only</option>
          <option>Not required</option>
        </select>
      </div>

      <!-- Notes -->
      <div class="md:col-span-2">
        <label for="message" class="block text-sm text-gray-300 mb-2"
          >Special Requests</label
        >
        <textarea
          id="message"
          name="message"
          rows="4"
          class="w-full rounded-md bg-gray-800 border border-gray-700 px-4 py-3 text-white focus:ring-2 focus:ring-amber-500 focus:border-amber-500 transition-colors"
        ></textarea>
      </div>
    </div>

    <div class="text-center pt-8">
      <button type="submit" id="submit-btn" class="action-btn">
        Request Reservation
      </button>
    </div>
  </form>
</section>

<script src="https://challenges.cloudflare.com/turnstile/v0/api.js" async defer
></script>

<script>
  document.addEventListener("DOMContentLoaded", async () => {
    // Listen for date updates from the React component (only when both dates selected)

    // RESET FUNCTION (for success message button)
    window.resetDatePickers = () => {
      const checkinInput = document.querySelector('input[name="checkin"]');
      const checkoutInput = document.querySelector('input[name="checkout"]');

      if (checkinInput) checkinInput.value = "";
      if (checkoutInput) checkoutInput.value = "";

      const nightsMessage = document.getElementById("nights-message");
      nightsMessage?.classList.remove("opacity-100");
      if (nightsMessage) nightsMessage.textContent = "";
    };

    // FORM SUBMISSION WITH TURNSTILE
    try {
      const { supabase } = await import("../lib/supabase.js");

      const form = document.getElementById("reservation-form");
      const submitBtn = document.getElementById("submit-btn");
      const messageDiv = document.getElementById("form-message");

      if (!form) return;

      form.addEventListener("submit", async (e) => {
        e.preventDefault();

        const nightsMessage = document.getElementById("nights-message");

        // VALIDATE DATES FIRST
        const formData = new FormData(form);
        const checkinValue = formData.get("checkin");
        const checkoutValue = formData.get("checkout");

        if (!checkinValue || !checkoutValue) {
          nightsMessage.textContent =
            "Please review Check-In / Check-Out dates.";
          nightsMessage.className =
            "bg-red-900/30 border border-red-600/50 text-red-300 p-2 rounded-sm text-center mt-2 text-sm transition-opacity duration-500 ease-in-out opacity-100 mb-6";
          return;
        }

        // Check if Turnstile is loaded
        if (typeof turnstile === "undefined") {
          showMessage(
            "Security validation not loaded. Please refresh the page.",
            "error"
          );
          return;
        }

        // ADD TURNSTILE VALIDATION
        const turnstileResponse = turnstile.getResponse();
        if (!turnstileResponse) {
          showMessage("Please complete the security check.", "error");
          return;
        }

        // Show loading state
        submitBtn.disabled = true;
        submitBtn.textContent = "Submitting...";
        showMessage("Submitting your reservation request...", "loading");

        try {
          // Calculate nights (diffDays) for submission
          const checkin = new Date(formData.get("checkin"));
          const checkout = new Date(formData.get("checkout"));
          const diffTime = Math.abs(checkout - checkin);
          const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));

          const submission = {
            form_name: formData.get("form-name"),
            pageUrl: formData.get("pageUrl"),
            roomName: formData.get("roomName"),
            roomSlug: formData.get("roomSlug"),
            basePrice: formData.get("basePrice"),
            checkin: formData.get("checkin"),
            checkout: formData.get("checkout"),
            nightsReserved: diffDays,
            firstName: formData.get("firstName"),
            lastName: formData.get("lastName"),
            email: formData.get("email"),
            phone: formData.get("phone"),
            adults: parseInt(formData.get("adults")) || 0,
            children: parseInt(formData.get("children")) || 0,
            wantSafaris: formData.get("wantSafaris"),
            transfer: formData.get("transfer"),
            message: formData.get("message"),
            turnstile_response: turnstileResponse,
          };

          // Submit to Supabase
          const { data, error } = await supabase
            .from("contact_submissions")
            .insert([submission]);

          if (error) throw error;

          // Success!
          showSuccessMessage();
        } catch (error) {
          console.error("Submission error:", error);
          showMessage(
            "Sorry, there was an error submitting your reservation. Please try again or contact us directly at +91 90226 80451.",
            "error"
          );
          submitBtn.disabled = false;
          submitBtn.textContent = "Request Reservation";
          if (typeof turnstile !== "undefined") {
            turnstile.reset();
          }
        }
      });

      function showMessage(text, type) {
        messageDiv.innerHTML = text;
        messageDiv.className = `mb-6 p-4 rounded-xl text-center ${
          type === "success"
            ? "bg-green-900/50 text-green-300 border border-green-700"
            : type === "error"
              ? "bg-red-900/50 text-red-300 border border-red-700"
              : "bg-blue-900/50 text-blue-300 border border-blue-700"
        }`;
        messageDiv.classList.remove("hidden");
      }

      function showSuccessMessage() {
        form.style.display = "none";

        messageDiv.innerHTML = `
          <div class="text-center py-12">
            <div class="text-6xl mb-6">🏨</div>
            <h3 class="text-2xl font-serif italic text-white mb-4">Reservation Request Received!</h3>
            <p class="text-lg text-gray-300 mb-6">Your reservation request has been submitted successfully.</p>
            <p class="text-gray-400 mb-8">Our reservations team will contact you shortly to confirm availability and arrange your safari experience.</p>
            <button 
              onclick="location.reload()" 
              class="bg-gradient-to-r from-amber-500 to-orange-600 text-white font-semibold px-6 py-3 rounded-xl transition-all duration-300 hover:shadow-xl hover:-translate-y-1 hover:from-amber-600 hover:to-orange-700"
            >
              Make Another Reservation
            </button>
          </div>
        `;
        messageDiv.className =
          "bg-gradient-to-br from-gray-800/50 to-gray-900/50 backdrop-blur-xl border border-amber-600 rounded-2xl p-8 text-center";
        messageDiv.classList.remove("hidden");

        if (typeof turnstile !== "undefined") {
          turnstile.reset();
        }
      }
    } catch (error) {
      console.error("Failed to load Supabase:", error);
    }
  });
</script>
